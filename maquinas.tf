#Creacion de una Ubuntu server, donde se instala git y docker para desplegar
#un web con la vulnerabilidad log4shell
resource "azurerm_linux_virtual_machine" "servidor_web" {
  name                  = "${var.prefix}-servidor-web"
  location              = azurerm_resource_group.resource_gp.location
  resource_group_name   = azurerm_resource_group.resource_gp.name
  network_interface_ids = [azurerm_network_interface.interfaz_servidor_web.id]
  size               = "Standard_DS1_v2"
  admin_username      = "${var.admin_username_web}"
  admin_password = "${var.admin_password_web}"
  disable_password_authentication = false
  custom_data    = filebase64("install_server_web.sh")
  
  os_disk {
    caching              = "ReadWrite"
    storage_account_type = "Standard_LRS"
  }

  source_image_reference {
    publisher = "Canonical"
    offer     = "UbuntuServer"
    sku       = "16.04-LTS"
    version   = "latest"
  } 
}

#Creacion de una Ubuntu server, donde se instala docker para desplegar
#mysql con una base de datos poblada
resource "azurerm_linux_virtual_machine" "servidor_db" {
  name                  = "${var.prefix}-servidor-db"
  location              = azurerm_resource_group.resource_gp.location
  resource_group_name   = azurerm_resource_group.resource_gp.name
  network_interface_ids = [azurerm_network_interface.interfaz_servidor_db.id]
  size               = "Standard_DS1_v2"
  admin_username      = "${var.admin_username_db}"
  admin_password = "${var.admin_password_db}"
  disable_password_authentication = false
  custom_data    = filebase64("install_server_db.sh")
  
  os_disk {
    caching              = "ReadWrite"
    storage_account_type = "Standard_LRS"
  }

  source_image_reference {
    publisher = "Canonical"
    offer     = "UbuntuServer"
    sku       = "16.04-LTS"
    version   = "latest"
  } 
}

#Creacion de la maquina con el directorio activo
resource "azurerm_windows_virtual_machine" "servidor_ad" {
  name                  = "${var.prefix}-servidor-ad"
  location              = azurerm_resource_group.resource_gp.location
  resource_group_name   = azurerm_resource_group.resource_gp.name
  network_interface_ids = [azurerm_network_interface.interfaz_servidor_ad.id]
  size               = "Standard_DS1_v2"
  custom_data    = filebase64("install_windows_server.ps1")
  computer_name  = "windows-vm"
  admin_username      = "${var.admin_username_ad}"
  admin_password = "${var.admin_password_ad}"
  
  os_disk {
    caching              = "ReadWrite"
    storage_account_type = "Standard_LRS"
  }

  source_image_reference {
    publisher = "MicrosoftWindowsServer"
    offer     = "WindowsServer"
    sku       = "2019-Datacenter"
    version   = "latest"
  } 
}

resource "azurerm_virtual_machine_extension" "config_ad" {
  name                 = "config-ad"
  virtual_machine_id = azurerm_windows_virtual_machine.servidor_ad.id
  publisher            = "Microsoft.Compute"
  type                 = "CustomScriptExtension"
  type_handler_version = "1.10"
  settings = <<SETTINGS
    {
        "commandToExecute": "powershell -ExecutionPolicy unrestricted -NoProfile -NonInteractive -command \"cp c:/azuredata/customdata.bin c:/azuredata/install.ps1; c:/azuredata/install.ps1\""
    }
    SETTINGS
}